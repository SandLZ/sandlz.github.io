(window.webpackJsonp=window.webpackJsonp||[]).push([[43],{454:function(t,a,s){"use strict";s.r(a);var n=s(26),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"动画"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#动画"}},[t._v("#")]),t._v(" 动画")]),t._v(" "),s("p",[t._v("在 CSS3 出现之前，动画都是通过 JavaScript 动态的改变元素的样式属性来完成了，这种方式虽然能够实现动画，但是在性能上存在一些问题。CSS3 的出现，让动画变得更加容易，性能也更加好。\nCSS3 中有三个关于动画的样式属性 "),s("code",[t._v("transition")]),t._v("、"),s("code",[t._v("transform")]),t._v(" 和 "),s("code",[t._v("animation")]),t._v("；")]),t._v(" "),s("h2",{attrs:{id:"tansition"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tansition"}},[t._v("#")]),t._v(" "),s("code",[t._v("tansition")])]),t._v(" "),s("p",[s("code",[t._v("tansition")]),t._v(" 翻译为 "),s("strong",[t._v("过渡")]),t._v("，过渡是 CSS3 中具有颠覆性的一个特征，可以实现元素不同状态间的平滑过渡（补间动画），经常用来制作动画效果。")]),t._v(" "),s("ul",[s("li",[s("p",[s("strong",[t._v("补间动画")]),t._v("：自动完成从起始状态到终止状态的的过渡。不用管中间的状态。")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("帧动画")]),t._v("：通过一帧一帧的画面按照固定顺序和速度播放。如电影胶片")])])]),t._v(" "),s("p",[s("code",[t._v("transition")]),t._v(" 包括以下属性：")]),t._v(" "),s("ul",[s("li",[s("p",[s("code",[t._v("transition-property")]),t._v(": all; 如果希望所有的属性都发生过渡，就使用 all。")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("transition-duration")]),t._v(": 1s; 过渡的持续时间。")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("transition-timing-function")]),t._v(": linear; 运动曲线。属性值可以是：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("linear")]),t._v(" 线性")]),t._v(" "),s("li",[s("code",[t._v("ease")]),t._v(" 减速")]),t._v(" "),s("li",[s("code",[t._v("ease-in")]),t._v(" 加速")]),t._v(" "),s("li",[s("code",[t._v("ease-out")]),t._v(" 减速")]),t._v(" "),s("li",[s("code",[t._v("ease-in-out")]),t._v(" 先加速后减速")]),t._v(" "),s("li",[s("code",[t._v("transition-delay")]),t._v(": 1s; 过渡延迟。多长时间后再执行这个过渡动画。")])])])]),t._v(" "),s("p",[t._v("上面的四个属性也可以写成综合属性：")]),t._v(" "),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/** transition: 让哪些属性进行过度 过渡的持续时间 运动曲线 延迟时间; */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("transition")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" all 3s linear 0s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h2",{attrs:{id:"transform"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#transform"}},[t._v("#")]),t._v(" "),s("code",[t._v("transform")])]),t._v(" "),s("p",[s("code",[t._v("tansform")]),t._v(" 翻译为 "),s("strong",[t._v("转换")]),t._v("，包含")]),t._v(" "),s("ul",[s("li",[t._v("2D 转换")]),t._v(" "),s("li",[t._v("3D 转换")])]),t._v(" "),s("h3",{attrs:{id:"_2d-转换"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2d-转换"}},[t._v("#")]),t._v(" 2D 转换")]),t._v(" "),s("p",[t._v("2D 转换包括：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("scale")]),t._v(" 缩放")]),t._v(" "),s("li",[s("code",[t._v("translate")]),t._v(" 移动")]),t._v(" "),s("li",[s("code",[t._v("rotate")]),t._v(" 旋转")])]),t._v(" "),s("h4",{attrs:{id:"scale"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#scale"}},[t._v("#")]),t._v(" "),s("code",[t._v("scale")])]),t._v(" "),s("p",[t._v("x：表示水平方向的缩放倍数。y：表示垂直方向的缩放倍数。如果只写一个值就是等比例缩放")]),t._v(" "),s("p",[t._v("取值：大于 1 表示放大，小于 1 表示缩小。不能为百分比。")]),t._v(" "),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token property"}},[t._v("transform")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("scale")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h4",{attrs:{id:"translate"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#translate"}},[t._v("#")]),t._v(" "),s("code",[t._v("translate")])]),t._v(" "),s("p",[t._v("参数为百分比，相对于自身移动。")]),t._v(" "),s("p",[t._v("正值：向右和向下。 负值：向左和向上。如果只写一个值，则表示水平移动。")]),t._v(" "),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token property"}},[t._v("transform")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("translate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("水平位移"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 垂直位移"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h4",{attrs:{id:"rotate"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#rotate"}},[t._v("#")]),t._v(" "),s("code",[t._v("rotate")])]),t._v(" "),s("p",[t._v("参数：正值 顺时针；负值：逆时针。")]),t._v(" "),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token property"}},[t._v("transform")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("rotate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("角度"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[s("code",[t._v("rotate")]),t._v(" 旋转时，默认是以盒子的正中心为坐标原点的。如果想改变旋转的坐标原点，可以用"),s("code",[t._v("transform-origin")]),t._v("属性。格式如下：")]),t._v(" "),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token property"}},[t._v("transform-origin")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 水平坐标 垂直坐标"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("transform-origin")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 50px 50px"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("transform-origin")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" center bottom"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" //旋转时，以盒子底部的中心为坐标原点\n")])])]),s("h3",{attrs:{id:"_3d-转换"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3d-转换"}},[t._v("#")]),t._v(" 3D 转换")]),t._v(" "),s("p",[t._v("3D 转换包括：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("translate")]),t._v(" 移动")]),t._v(" "),s("li",[s("code",[t._v("rotate")]),t._v(" 旋转")]),t._v(" "),s("li",[s("code",[t._v("perspective")]),t._v(" 透视")]),t._v(" "),s("li",[s("code",[t._v("transform-style")]),t._v(" 呈现")])]),t._v(" "),s("h4",{attrs:{id:"translate-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#translate-2"}},[t._v("#")]),t._v(" "),s("code",[t._v("translate")])]),t._v(" "),s("ul",[s("li",[s("code",[t._v("translateX")])]),t._v(" "),s("li",[s("code",[t._v("translateY")])]),t._v(" "),s("li",[s("code",[t._v("translateZ")])])]),t._v(" "),s("h4",{attrs:{id:"rotate-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#rotate-2"}},[t._v("#")]),t._v(" "),s("code",[t._v("rotate")])]),t._v(" "),s("ul",[s("li",[s("code",[t._v("rotateX")])]),t._v(" "),s("li",[s("code",[t._v("rotateY")])]),t._v(" "),s("li",[s("code",[t._v("rotateZ")])])]),t._v(" "),s("p",[t._v("旋转的方向：（左手法则）")]),t._v(" "),s("h4",{attrs:{id:"perspective"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#perspective"}},[t._v("#")]),t._v(" "),s("code",[t._v("perspective")])]),t._v(" "),s("p",[t._v("电脑显示屏是一个 2D 平面，图像之所以具有立体感（3D 效果），其实只是一种视觉呈现，通过透视可以实现此目的。")]),t._v(" "),s("p",[t._v("透视可以将一个 2D 平面，在转换的过程当中，呈现 3D 效果。但仅仅只是视觉呈现出 3d 效果，并不是正真的 3d。")]),t._v(" "),s("p",[t._v("格式有两种写法：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("作为一个属性，设置给父元素，作用于所有 3D 转换的子元素")])]),t._v(" "),s("li",[s("p",[t._v("作为 transform 属性的一个值，做用于元素自身。")])])]),t._v(" "),s("h4",{attrs:{id:"transform-style"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#transform-style"}},[t._v("#")]),t._v(" "),s("code",[t._v("transform-style")])]),t._v(" "),s("p",[t._v("3D 元素构建是指某个图形是由多个元素构成的，可以给这些元素的父元素设置"),s("code",[t._v("transform-style: preserve-3d")]),t._v("来使其变成一个真正的 3D 图形。属性值可以如下：")]),t._v(" "),s("h2",{attrs:{id:"animation"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#animation"}},[t._v("#")]),t._v(" "),s("code",[t._v("animation")])]),t._v(" "),s("p",[t._v("动画是 CSS3 中具有颠覆性的特征，可通过设置多个节点 来精确控制一个或一组动画，常用来实现复杂的动画效果。")]),t._v(" "),s("h3",{attrs:{id:"定义动画的步骤"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#定义动画的步骤"}},[t._v("#")]),t._v(" 定义动画的步骤")]),t._v(" "),s("p",[t._v("（1）通过@keyframes 定义动画；")]),t._v(" "),s("p",[t._v("（2）将这段动画通过百分比，分割成多个节点；然后各节点中分别定义各属性；")]),t._v(" "),s("p",[t._v("（3）在指定元素里，通过 animation 属性调用动画。")]),t._v(" "),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[t._v("定义动画：\n"),s("span",{pre:!0,attrs:{class:"token atrule"}},[s("span",{pre:!0,attrs:{class:"token rule"}},[t._v("@keyframes")]),t._v(" 动画名")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("from")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" 初始状态 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("to")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" 结束状态 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n调用：\n"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("animation")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 动画名称 持续时间；\n")])])]),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token property"}},[t._v("animation")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 定义的动画名称 持续时间  执行次数  是否反向  运动曲线 延迟执行。"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("infinite 表示无限次"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("animation")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" move1 1s  alternate linear 3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("animation")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" move2 4s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h3",{attrs:{id:"动画属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#动画属性"}},[t._v("#")]),t._v(" 动画属性")]),t._v(" "),s("p",[t._v("我们刚刚在调用动画时，animation 属性的格式如下：")]),t._v(" "),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token property"}},[t._v("animation")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 定义的动画名称 持续时间  执行次数  是否反向  运动曲线 延迟执行。"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("infinite 表示无限次"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("animation")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" move1 1s  alternate linear 3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("animation")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" move2 4s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("ol",[s("li",[t._v("动画名称(必须)")])]),t._v(" "),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token property"}},[t._v("animation-name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" move"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("ol",{attrs:{start:"2"}},[s("li",[t._v("执行一次动画的持续时间：(必须)")])]),t._v(" "),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token property"}},[t._v("animation-duration")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 4s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("ol",{attrs:{start:"3"}},[s("li",[t._v("动画的执行次数")])]),t._v(" "),s("p",[t._v("属性值 infinite 表示无数次")]),t._v(" "),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token property"}},[t._v("animation-iteration-count")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("ol",{attrs:{start:"4"}},[s("li",[s("p",[t._v("动画的方向")]),t._v(" "),s("p",[t._v("属性值："),s("code",[t._v("normal")]),t._v(" 正常，"),s("code",[t._v("alternate")]),t._v(" 反向。")])])]),t._v(" "),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token property"}},[t._v("animation-direction")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" alternate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("ol",{attrs:{start:"5"}},[s("li",[t._v("动画延迟执行")])]),t._v(" "),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token property"}},[t._v("animation-delay")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("ol",{attrs:{start:"6"}},[s("li",[s("p",[t._v("设置动画结束时，盒子的状态")]),t._v(" "),s("p",[t._v("属性值：\n"),s("code",[t._v("forwards")]),t._v("：保持动画结束后的状态（默认），")]),t._v(" "),s("p",[s("code",[t._v("backwards")]),t._v("：动画结束后回到最初的状态。")])])]),t._v(" "),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token property"}},[t._v("animation-fill-mode")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" forwards"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("ol",{attrs:{start:"7"}},[s("li",[s("p",[t._v("运动曲线")]),t._v(" "),s("p",[t._v("属性值可以是："),s("code",[t._v("linear")]),t._v("、 "),s("code",[t._v("ease-in-out")]),t._v("、 "),s("code",[t._v("steps()")]),t._v("等。")])])]),t._v(" "),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token property"}},[t._v("animation-timing-function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ease-in"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])])}),[],!1,null,null,null);a.default=e.exports}}]);