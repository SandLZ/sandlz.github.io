(window.webpackJsonp=window.webpackJsonp||[]).push([[120],{537:function(a,t,e){"use strict";e.r(t);var v=e(26),_=Object(v.a)({},(function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h1",{attrs:{id:"angular"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#angular"}},[a._v("#")]),a._v(" Angular")]),a._v(" "),e("h2",{attrs:{id:"脏检测"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#脏检测"}},[a._v("#")]),a._v(" 脏检测")]),a._v(" "),e("h3",{attrs:{id:"脏检测的范围"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#脏检测的范围"}},[a._v("#")]),a._v(" 脏检测的范围")]),a._v(" "),e("p",[a._v("angular 会对所有绑定到 UI 上的表达式做脏检查。其实，在 angular 实现内部，所有绑定表达式都被转换为 "),e("code",[a._v("$scope.$watch()")]),a._v("。每个 "),e("code",[a._v("$watch")]),a._v(" 记录了上一次表达式的值。有 "),e("code",[a._v('ng-bind="a"')]),a._v(" 即有 "),e("code",[a._v("$scope.$watch('a', callback)")]),a._v("，而 "),e("code",[a._v("$scope.$watch")]),a._v(" 可不会管被 watch的表达式是否跟触发脏检查的事件有关.")]),a._v(" "),e("h3",{attrs:{id:"监控对象属性-watch和-digest"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#监控对象属性-watch和-digest"}},[a._v("#")]),a._v(" 监控对象属性："),e("code",[a._v("$watch")]),a._v("和 "),e("code",[a._v("$digest")])]),a._v(" "),e("p",[e("code",[a._v("$watch")]),a._v(" 和 "),e("code",[a._v("$digest")]),a._v(" 是相辅相成的。两者一起，构成了Angular作用域的核心："),e("strong",[a._v("数据变化的响应")]),a._v("。")]),a._v(" "),e("h3",{attrs:{id:"angular-的数据绑定采用什么机制-详述原理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#angular-的数据绑定采用什么机制-详述原理"}},[a._v("#")]),a._v(" angular 的数据绑定采用什么机制？详述原理")]),a._v(" "),e("p",[a._v("脏检查机制")]),a._v(" "),e("p",[e("strong",[a._v("双向数据绑定")]),a._v("是 AngularJS 的核心机制之一。当 view 中有任何数据变化时，会更新到 model ，当 model 中数据有变化时，view 也会同步更新，显然，这需要一个监控。")]),a._v(" "),e("p",[a._v("原理就是，Angular 在 scope 模型上设置了一个监听队列，用来监听数据变化并更新 view 。每次绑定一个东西到 view 上时 AngularJS 就会往 $watch 队列里插入一条 "),e("code",[a._v("$watch")]),a._v(" ，用来检测它监视的 model 里是否有变化的东西。当浏览器接收到可以被 "),e("code",[a._v("angular context")]),a._v(" 处理的事件时， "),e("code",[a._v("$digest")]),a._v(" 循环就会触发，遍历所有的 "),e("code",[a._v("$watch")]),a._v(" ，最后更新 dom。")])])}),[],!1,null,null,null);t.default=_.exports}}]);