(window.webpackJsonp=window.webpackJsonp||[]).push([[134],{548:function(t,a,e){"use strict";e.r(a);var s=e(26),n=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"qa"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#qa"}},[t._v("#")]),t._v(" QA")]),t._v(" "),e("p"),e("div",{staticClass:"table-of-contents"},[e("ul",[e("li",[e("a",{attrs:{href:"#vue"}},[t._v("Vue")]),e("ul",[e("li",[e("a",{attrs:{href:"#_1-0-vue3响应式"}},[t._v("1.0 Vue3响应式")])]),e("li",[e("a",{attrs:{href:"#_1-1-双向绑定原理"}},[t._v("1.1 双向绑定原理")])]),e("li",[e("a",{attrs:{href:"#_1-2-vue-js-3-0-放弃-defineproperty-使用-proxy-的原因"}},[t._v("1.2 Vue.js 3.0 放弃 defineProperty, 使用 Proxy 的原因")])]),e("li",[e("a",{attrs:{href:"#_1-3-vue-2-中给-data-中的对象属性添加一个新的属性时会发生什么-如何解决"}},[t._v("1.3 Vue 2 中给 data 中的对象属性添加一个新的属性时会发生什么？如何解决？")])]),e("li",[e("a",{attrs:{href:"#_1-4-computed-和-watch-的区别"}},[t._v("1.4 Computed和 Watch 的区别")])]),e("li",[e("a",{attrs:{href:"#_1-5-computed-和-methods-的区别"}},[t._v("1.5 Computed 和 Methods 的区别")])]),e("li",[e("a",{attrs:{href:"#_1-6-虚拟-dom-diff-算法"}},[t._v("1.6 虚拟 DOM, Diff 算法")])]),e("li",[e("a",{attrs:{href:"#_1-7-为何需要-virtual-dom"}},[t._v("1.7 为何需要 Virtual DOM？")])]),e("li",[e("a",{attrs:{href:"#_1-8-过滤器-filter"}},[t._v("1.8 过滤器 (Filter)")])]),e("li",[e("a",{attrs:{href:"#_1-9-常见的事件修饰符及其作用"}},[t._v("1.9 常见的事件修饰符及其作用")])]),e("li",[e("a",{attrs:{href:"#_1-10-v-model-是如何实现的-语法糖实际是什么"}},[t._v("1.10 v-model 是如何实现的，语法糖实际是什么")])]),e("li",[e("a",{attrs:{href:"#_1-11-data-为什么是一个函数而不是对象"}},[t._v("1.11 data 为什么是一个函数而不是对象")])]),e("li",[e("a",{attrs:{href:"#_1-12-vue-template-到-render-的过程"}},[t._v("1.12 Vue template 到 render 的过程")])]),e("li",[e("a",{attrs:{href:"#_1-13-vue-data-中某一个属性的值发生改变后-视图会立即同步执行重新渲染吗"}},[t._v("1.13 Vue data 中某一个属性的值发生改变后，视图会立即同步执行重新渲染吗？")])]),e("li",[e("a",{attrs:{href:"#_1-14-如何解决数据层级结构太深的问题"}},[t._v("1.14 如何解决数据层级结构太深的问题")])]),e("li",[e("a",{attrs:{href:"#_1-15-vue-的-nexttick-方法的实现原理"}},[t._v("1.15 vue 的 nextTick 方法的实现原理")])]),e("li",[e("a",{attrs:{href:"#_1-16-v-if-和-v-for-一起使用的弊端及解决办法"}},[t._v("1.16 v-if 和 v-for 一起使用的弊端及解决办法")])]),e("li",[e("a",{attrs:{href:"#_1-17-vue-常用指令"}},[t._v("1.17 vue 常用指令")])]),e("li",[e("a",{attrs:{href:"#_1-18-组件传值方式有哪些"}},[t._v("1.18 组件传值方式有哪些")])]),e("li",[e("a",{attrs:{href:"#_1-19-vue-loader-是什么-使用它的用途有哪些"}},[t._v("1.19 vue-loader 是什么？使用它的用途有哪些？")])]),e("li",[e("a",{attrs:{href:"#_1-20-页面闪烁"}},[t._v("1.20 页面闪烁")])]),e("li",[e("a",{attrs:{href:"#_1-21-vuejs-与-angularjs-以及-react-的区别"}},[t._v("1.21 vuejs 与 angularjs 以及 react 的区别")])]),e("li",[e("a",{attrs:{href:"#_1-22-vue-生命周期"}},[t._v("1.22 Vue 生命周期")])]),e("li",[e("a",{attrs:{href:"#_1-23-vue-use-vuex-做了什么"}},[t._v("1.23 Vue.use(VueX) 做了什么？")])])])]),e("li",[e("a",{attrs:{href:"#component"}},[t._v("Component")]),e("ul",[e("li",[e("a",{attrs:{href:"#_2-1-keep-alive-是什么"}},[t._v("2.1 keep-alive 是什么？")])]),e("li",[e("a",{attrs:{href:"#_2-2-父子组件的生命周期顺序"}},[t._v("2.2 父子组件的生命周期顺序")])])])]),e("li",[e("a",{attrs:{href:"#vuex"}},[t._v("VueX")]),e("ul",[e("li",[e("a",{attrs:{href:"#_3-1-vuex-的核心概念"}},[t._v("3.1 vuex 的核心概念")])]),e("li",[e("a",{attrs:{href:"#_3-2-vuex-是什么-怎么使用-哪种功能场景使用它"}},[t._v("3.2 vuex 是什么？怎么使用？哪种功能场景使用它？")])]),e("li",[e("a",{attrs:{href:"#_3-3-多个组件之间如何拆分各自的-state-每块小的组件有自己的状态-它们之间还有一些公共的状态需要维护-如何思考这块"}},[t._v("3.3 多个组件之间如何拆分各自的 state，每块小的组件有自己的状态，它们之间还有一些公共的状态需要维护，如何思考这块")])])])]),e("li",[e("a",{attrs:{href:"#router"}},[t._v("Router")]),e("ul",[e("li",[e("a",{attrs:{href:"#_4-1-vue-router-路由的两种模式"}},[t._v("4.1 vue-router 路由的两种模式")])]),e("li",[e("a",{attrs:{href:"#_4-2-vue-router-有哪几种导航钩子"}},[t._v("4.2 vue-router 有哪几种导航钩子？")])]),e("li",[e("a",{attrs:{href:"#_4-3-route和-router-的区别"}},[t._v("4.3 $route和$router 的区别")])])])])])]),e("p"),t._v(" "),e("h2",{attrs:{id:"vue"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue"}},[t._v("#")]),t._v(" Vue")]),t._v(" "),e("h3",{attrs:{id:"_1-0-vue3响应式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-0-vue3响应式"}},[t._v("#")]),t._v(" 1.0 Vue3响应式")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://www.cnblogs.com/aeipyuan/p/12726202.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("vue3响应式简单实现"),e("OutboundLink")],1),t._v(" "),e("a",{attrs:{href:"hhttps://juejin.cn/post/6844904122479542285"}},[t._v("Vue3 的响应式和以前有什么区别，Proxy 无敌？")])]),t._v(" "),e("h3",{attrs:{id:"_1-1-双向绑定原理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-双向绑定原理"}},[t._v("#")]),t._v(" 1.1 双向绑定原理")]),t._v(" "),e("p",[t._v("Vue.js 2.0 采用"),e("strong",[t._v("数据劫持")]),t._v(" 结合 **发布者-订阅者模式（PubSub 模式）**的方式，通过 "),e("code",[t._v("Object.defineProperty()")]),t._v("来劫持各个属性的 "),e("code",[t._v("setter")]),t._v("，"),e("code",[t._v("getter")]),t._v("，在数据变动时发布消息给订阅者，触发相应的监听回调。")]),t._v(" "),e("p",[t._v("每个组件实例都有相应的"),e("code",[t._v("watcher")]),t._v("程序实例，它会在组件渲染的过程中把属性记录为依赖，之后当依赖项的"),e("code",[t._v("setter")]),t._v("被调用时，会通知"),e("code",[t._v("watcher")]),t._v("重新计算，从而致使它关联的组件得以更新。")]),t._v(" "),e("p",[t._v("步骤：")]),t._v(" "),e("ol",[e("li",[t._v("需要"),e("code",[t._v("observe")]),t._v("的数据对象进行递归遍历，包括子属性对象的属性，都加上"),e("code",[t._v("setter")]),t._v("和"),e("code",[t._v("getter")]),t._v(", 这样的话，给这个对象的某个值赋值，就会触发"),e("code",[t._v("setter")]),t._v("，那么就能监听到了数据变化;")]),t._v(" "),e("li",[e("code",[t._v("compile")]),t._v("解析模板指令，将模板中的变量替换成数据，然后初始化渲染页面视图，并将每个指令对应的节点绑定更新函数，添加监听数据的订阅者，一旦数据有变动，收到通知，更新视图;")]),t._v(" "),e("li",[e("code",[t._v("Watcher")]),t._v("订阅者是"),e("code",[t._v("Observer")]),t._v("和"),e("code",[t._v("Compile")]),t._v("之间通信的桥梁，主要做的事情是:\n① 在自身实例化时往属性订阅器("),e("code",[t._v("dep")]),t._v(")里面添加自己\n② 自身必须有一个"),e("code",[t._v("update()")]),t._v("方法\n③ 待属性变动"),e("code",[t._v("dep.notice()")]),t._v("通知时，能调用自身的"),e("code",[t._v("update()")]),t._v("方法，并触发"),e("code",[t._v("Compile")]),t._v("中绑定的回调，则功成身退。")]),t._v(" "),e("li",[e("code",[t._v("MVVM")]),t._v(" 作为数据绑定的入口，整合 "),e("code",[t._v("Observer")]),t._v("、"),e("code",[t._v("Compile")]),t._v(" 和 "),e("code",[t._v("Watcher")]),t._v(" 三者，通过 "),e("code",[t._v("Observer")]),t._v(" 来监听自己的 "),e("code",[t._v("model")]),t._v(" 数据变化，通过 "),e("code",[t._v("Compile")]),t._v(" 来解析编译模板指令，最终利用 "),e("code",[t._v("Watcher")]),t._v(" 搭起 "),e("code",[t._v("Observer")]),t._v(" 和 "),e("code",[t._v("Compile")]),t._v(" 之间的通信桥梁，达到数据变化 -> 视图更新；视图交互变化("),e("code",[t._v("input")]),t._v(") -> 数据 "),e("code",[t._v("model")]),t._v(" 变更的双向绑定效果。")])]),t._v(" "),e("h3",{attrs:{id:"_1-2-vue-js-3-0-放弃-defineproperty-使用-proxy-的原因"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-vue-js-3-0-放弃-defineproperty-使用-proxy-的原因"}},[t._v("#")]),t._v(" 1.2 Vue.js 3.0 放弃 defineProperty, 使用 Proxy 的原因")]),t._v(" "),e("ul",[e("li",[t._v("监控到数组下标的变化时，开销很大。所以 Vue.js 放弃了下标变化的检测；")]),t._v(" "),e("li",[e("code",[t._v("Object.defineProperty")]),t._v(" 只能劫持对象的属性，而"),e("code",[t._v("Proxy")]),t._v("是直接代理对象;")]),t._v(" "),e("li",[e("code",[t._v("Object.defineProperty")]),t._v(" 需要遍历对象的每个属性，如果属性值也是对象，则需要深度遍历。而 "),e("code",[t._v("Proxy")]),t._v(" 直接代理对象，不需要遍历操作;")]),t._v(" "),e("li",[e("code",[t._v("Object.defineProperty")]),t._v(" 对新增属性需要手动进行"),e("code",[t._v("Observe")]),t._v("。vue2 时需要使用 "),e("code",[t._v("vm.$set")]),t._v(" 才能保证新增的属性也是响应式;")]),t._v(" "),e("li",[e("code",[t._v("Proxy")]),t._v(" 支持 13 种拦截操作，这是"),e("code",[t._v("defineProperty")]),t._v("所不具有的;")]),t._v(" "),e("li",[e("code",[t._v("Proxy")]),t._v(" 作为新标准，长远来看，JS 引擎会继续优化 Proxy，但 "),e("code",[t._v("getter")]),t._v(" 和 "),e("code",[t._v("setter")]),t._v(" 基本不会再有针对性优化")])]),t._v(" "),e("h3",{attrs:{id:"_1-3-vue-2-中给-data-中的对象属性添加一个新的属性时会发生什么-如何解决"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-vue-2-中给-data-中的对象属性添加一个新的属性时会发生什么-如何解决"}},[t._v("#")]),t._v(" 1.3 Vue 2 中给 data 中的对象属性添加一个新的属性时会发生什么？如何解决？")]),t._v(" "),e("p",[t._v("视图并未刷新。这是因为在 Vue 实例创建时，新属性并未声明，因此就没有被 Vue 转换为响应式的属性，自然就不会触发视图的更新.\n这时就需要使用 Vue 的全局 api "),e("code",[t._v("$set()：this.$set(this.obj, 'new_property', 'new_value')")])]),t._v(" "),e("h3",{attrs:{id:"_1-4-computed和-watch-的区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-computed和-watch-的区别"}},[t._v("#")]),t._v(" 1.4 "),e("code",[t._v("Computed")]),t._v("和 "),e("code",[t._v("Watch")]),t._v(" 的区别")]),t._v(" "),e("ol",[e("li",[e("code",[t._v("computed")]),t._v(" 计算属性 : 依赖其它属性值,并且 "),e("code",[t._v("computed")]),t._v(" 的值有缓存,只有它依赖的 属性值发生改变,下一次获取 "),e("code",[t._v("computed")]),t._v(" 的值时才会重新计算 "),e("code",[t._v("computed")]),t._v(" 的值。")]),t._v(" "),e("li",[e("code",[t._v("watch")]),t._v(" 侦听器 : 更多的是观察的作用,无缓存性,类似于某些数据的监听回调,每当监听的数据变化时都会执行回调进行后续操作。")])]),t._v(" "),e("p",[t._v("运用场景：")]),t._v(" "),e("ol",[e("li",[t._v("当我们需要进行数值计算,并且依赖于其它数据时,应该使用 "),e("code",[t._v("computed")]),t._v(",因为可以利用 "),e("code",[t._v("computed")]),t._v(" 的缓存特性,避免每次获取值时,都要重新计算。")]),t._v(" "),e("li",[t._v("当我们需要在数据变化时执行异步或开销较大的操作时,应该使用 "),e("code",[t._v("watch")]),t._v(",使用 "),e("code",[t._v("watch")]),t._v(" 选项允许我们执行异步操作 ( 访问一个 API ),限制我们执行该操作的频率, 并在我们得到最终结果前,设置中间状态。这些都是计算属性无法做到的。")]),t._v(" "),e("li",[t._v("多个因素影响一个显示，用"),e("code",[t._v("Computed")]),t._v("；一个因素的变化影响多个其他因素、显示，用 Watch;")])]),t._v(" "),e("h3",{attrs:{id:"_1-5-computed-和-methods-的区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-5-computed-和-methods-的区别"}},[t._v("#")]),t._v(" 1.5 Computed 和 Methods 的区别")]),t._v(" "),e("ol",[e("li",[e("code",[t._v("computed")]),t._v(": 计算属性是基于它们的依赖进行缓存的,只有在它的相关依赖发生改变时才会重新求值对于 "),e("code",[t._v("method")]),t._v(" ，只要发生重新渲染，")]),t._v(" "),e("li",[e("code",[t._v("method")]),t._v(": 调用总会执行该函数")])]),t._v(" "),e("h3",{attrs:{id:"_1-6-虚拟-dom-diff-算法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-6-虚拟-dom-diff-算法"}},[t._v("#")]),t._v(" 1.6 虚拟 DOM, Diff 算法")]),t._v(" "),e("ol",[e("li",[t._v("让我们不用直接操作 DOM 元素，只操作数据便可以重新渲染页面")]),t._v(" "),e("li",[t._v("虚拟 dom 是为了解决浏览器性能问题而被设计出来的\n当操作数据时，将改变的 dom 元素缓存起来，都计算完后再通过比较映射到真实的 dom 树上")]),t._v(" "),e("li",[t._v("diff 算法比较新旧虚拟 dom。如果节点类型相同，则比较数据，修改数据；如果节点不同，直接干掉节点及所有子节点，插入新的节点；如果给每个节点都设置了唯一的 key，就可以准确的找到需要改变的内容，否则就会出现修改一个地方导致其他地方都改变的情况。比如 "),e("code",[t._v("A-B-C-D")]),t._v(", 我要插入新节点 "),e("code",[t._v("A-B-M-C-D")]),t._v(",实际上改变的了 "),e("code",[t._v("C")]),t._v(" 和 "),e("code",[t._v("D")]),t._v("。但是设置了 key，就可以准确的找到 "),e("code",[t._v("B C")]),t._v(" 并插入")])]),t._v(" "),e("h3",{attrs:{id:"_1-7-为何需要-virtual-dom"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-7-为何需要-virtual-dom"}},[t._v("#")]),t._v(" 1.7 为何需要 Virtual DOM？")]),t._v(" "),e("ol",[e("li",[t._v("具备跨平台的优势")]),t._v(" "),e("li",[t._v("操作 DOM 慢，js 运行效率高。我们可以将 DOM 对比操作放在 JS 层，提高效率。")]),t._v(" "),e("li",[t._v("提升渲染性能")])]),t._v(" "),e("h3",{attrs:{id:"_1-8-过滤器-filter"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-8-过滤器-filter"}},[t._v("#")]),t._v(" 1.8 过滤器 (Filter)")]),t._v(" "),e("p",[t._v("在 Vue 中使用 "),e("code",[t._v("filters")]),t._v(" 来过滤(格式化)数据，"),e("code",[t._v("filters")]),t._v(" 不会修改数据，而是过滤(格式化)数据，改变用户看到的输出（计算属性 "),e("code",[t._v("computed")]),t._v(" ，方法 "),e("code",[t._v("methods")]),t._v(" 都是通过修改数据来处理数据格式的输出显示。\n使用场景： 比如需要处理时间、数字等的的显示格式；")]),t._v(" "),e("h4",{attrs:{id:"全局过滤器必须写在-vue-实例创建之前"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#全局过滤器必须写在-vue-实例创建之前"}},[t._v("#")]),t._v(" 全局过滤器必须写在 vue 实例创建之前")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("Vue"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("filter")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"testfilter"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("value"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" text")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回处理后的值")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" value "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" text"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("h4",{attrs:{id:"局部写法-在组件实例对象里挂载"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#局部写法-在组件实例对象里挂载"}},[t._v("#")]),t._v(" 局部写法：在组件实例对象里挂载")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("filters"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("changemsg")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("val"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" text")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" val "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" text"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("h4",{attrs:{id:"使用方式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用方式"}},[t._v("#")]),t._v(" 使用方式")]),t._v(" "),e("p",[t._v("只能使用在"),e("code",[t._v("{{}}")]),t._v("和"),e("code",[t._v("：v-bind")]),t._v("中，定义时第一个参数固定为预处理的数，后面的数为调用时传入的参数，调用时参数第一个对应定义时第二个参数，依次往后类推")]),t._v(" "),e("div",{staticClass:"language-html extra-class"},[e("pre",{pre:!0,attrs:{class:"language-html"}},[e("code",[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("h3")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v(":title")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("test|changemsg(1234)"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("{{test|changemsg(4567)}}"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("h3")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n// 多个过滤器也可以串行使用\n"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("h2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("{{name|filter1|filter2|filter3}}"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("h2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),e("h3",{attrs:{id:"_1-9-常见的事件修饰符及其作用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-9-常见的事件修饰符及其作用"}},[t._v("#")]),t._v(" 1.9 常见的事件修饰符及其作用")]),t._v(" "),e("ol",[e("li",[e("code",[t._v(".stop")]),t._v("：等同于 JavaScript 中的 "),e("code",[t._v("event.stopPropagation()")]),t._v(" ，防止事件冒泡；")]),t._v(" "),e("li",[e("code",[t._v(".prevent")]),t._v(" ：等同于 JavaScript 中的 "),e("code",[t._v("event.preventDefault()")]),t._v(" ，防止执行预设的行为（如果事件可取消，则取消该事件，而不停止事件的进一步传播）；")]),t._v(" "),e("li",[e("code",[t._v(".capture")]),t._v(" ：当元素发生冒泡时，先触发带有该修饰符的元素。若有多个该修饰符，则由外而内触发。如 div1 中嵌套 div2 中嵌套 div3.capture 中嵌套 div4，那么执行顺序为：div3=》 div4=》div2=》div1")]),t._v(" "),e("li",[e("code",[t._v(".self")]),t._v(" ：只会触发自己范围内的事件，不包含子元素；")]),t._v(" "),e("li",[e("code",[t._v(".once")]),t._v(" ：只会触发一次。")])]),t._v(" "),e("h3",{attrs:{id:"_1-10-v-model-是如何实现的-语法糖实际是什么"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-10-v-model-是如何实现的-语法糖实际是什么"}},[t._v("#")]),t._v(" 1.10 v-model 是如何实现的，语法糖实际是什么")]),t._v(" "),e("p",[t._v("作用在表单元素上 "),e("code",[t._v('v-model="message"')]),t._v(" 等同于 "),e("code",[t._v('v-bind:value="message" v-on:input="message=$event.target.value"')]),t._v("\n作用在组件上, 本质是一个父子组件通信的语法糖，通过 "),e("code",[t._v("prop")]),t._v(" 和 "),e("code",[t._v("$emit")]),t._v(" 实现, 等同于 "),e("code",[t._v(':value="message" @input=" $emit(\'input\', $event.target.value)"')])]),t._v(" "),e("h3",{attrs:{id:"_1-11-data-为什么是一个函数而不是对象"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-11-data-为什么是一个函数而不是对象"}},[t._v("#")]),t._v(" 1.11 data 为什么是一个函数而不是对象")]),t._v(" "),e("p",[t._v("JavaScript 中的对象是引用类型的数据，当多个实例引用同一个对象时，只要一个实例对这个对象进行操作，其他实例中的数据也会发生变化。")]),t._v(" "),e("p",[t._v("而在 Vue 中，我们更多的是想要复用组件，那就需要每个组件都有自己的数据，这样组件之间才不会相互干扰。")]),t._v(" "),e("p",[t._v("所以组件的数据不能写成对象的形式，而是要写成函数的形式。数据以函数返回值的形式定义，这样当我们每次复用组件的时候，就会返回一个新的 data，也就是说每个组件都有自己的私有数据空间，它们各自维护自己的数据，不会干扰其他组件的正常运行。")]),t._v(" "),e("h3",{attrs:{id:"_1-12-vue-template-到-render-的过程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-12-vue-template-到-render-的过程"}},[t._v("#")]),t._v(" 1.12 Vue template 到 render 的过程")]),t._v(" "),e("p",[t._v("调用"),e("code",[t._v("parse")]),t._v("方法将"),e("code",[t._v("template")]),t._v("转化为 "),e("code",[t._v("ast")]),t._v("（抽象语法树, abstract syntax tree）\n对静态节点做优化。如果为静态节点，他们生成的 DOM 永远不会改变，这对运行时模板更新起到了极大的优化作用。\n生成渲染函数. 渲染的返回值是 VNode，VNode 是 Vue 的虚拟 DOM 节点，里面有（标签名，子节点，文本等等）")]),t._v(" "),e("h3",{attrs:{id:"_1-13-vue-data-中某一个属性的值发生改变后-视图会立即同步执行重新渲染吗"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-13-vue-data-中某一个属性的值发生改变后-视图会立即同步执行重新渲染吗"}},[t._v("#")]),t._v(" 1.13 Vue data 中某一个属性的值发生改变后，视图会立即同步执行重新渲染吗？")]),t._v(" "),e("p",[t._v("不会立即同步执行重新渲染。\nVue 实现响应式并不是数据发生变化之后 DOM 立即变化，而是按一定的策略进行 DOM 的更新。\nVue 在更新 DOM 时是异步执行的。只要侦听到数据变化， Vue 将开启一个队列，并缓冲在同一事件循环中发生的所有数据变更。")]),t._v(" "),e("p",[t._v("如果同一个 "),e("code",[t._v("watcher")]),t._v(' 被多次触发，只会被推入到队列中一次。这种在缓冲时去除重复数据对于避免不必要的计算和 DOM 操作是非常重要的。\n然后，在下一个的事件循环"tick"中，Vue 刷新队列并执行实际（已去重的）工作。')]),t._v(" "),e("h3",{attrs:{id:"_1-14-如何解决数据层级结构太深的问题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-14-如何解决数据层级结构太深的问题"}},[t._v("#")]),t._v(" 1.14 如何解决数据层级结构太深的问题")]),t._v(" "),e("p",[t._v("在开发业务时，经常会岀现异步获取数据的情况，有时数据层次比较深，如以下代码: "),e("code",[t._v('span \'v-text="a.b.c.d"></span>')]),t._v(", 可以使用 "),e("code",[t._v("vm.$set")]),t._v(" 手动定义一层数据: "),e("code",[t._v('vm.$set("demo"，a.b.c.d)')])]),t._v(" "),e("h3",{attrs:{id:"_1-15-vue-的-nexttick-方法的实现原理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-15-vue-的-nexttick-方法的实现原理"}},[t._v("#")]),t._v(" 1.15 vue 的 nextTick 方法的实现原理")]),t._v(" "),e("p",[e("code",[t._v("vue")]),t._v(" 用异步队列的方式来控制 "),e("code",[t._v("DOM")]),t._v(" 更新和 "),e("code",[t._v("nextTick")]),t._v(" 回调先后执行\n"),e("code",[t._v("microtask")]),t._v(" 因为其高优先级特性，能确保队列中的微任务在一次事件循环前被执行完毕")]),t._v(" "),e("h3",{attrs:{id:"_1-16-v-if-和-v-for-一起使用的弊端及解决办法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-16-v-if-和-v-for-一起使用的弊端及解决办法"}},[t._v("#")]),t._v(" 1.16 v-if 和 v-for 一起使用的弊端及解决办法")]),t._v(" "),e("p",[t._v("由于 "),e("code",[t._v("v-for")]),t._v(" 的优先级比 "),e("code",[t._v("v-if")]),t._v(" 高，所以导致每循环一次就会去 "),e("code",[t._v("v-if")]),t._v(" 一次，而 "),e("code",[t._v("v-if")]),t._v(" 是通过创建和销毁 "),e("code",[t._v("dom")]),t._v(" 元素来控制元素的显示与隐藏，所以就会不停的去创建和销毁元素，造成页面卡顿，性能下降。")]),t._v(" "),e("p",[t._v("解决办法：")]),t._v(" "),e("ul",[e("li",[t._v("在 v-for 的外层或内层包裹一个元素来使用 v-if")]),t._v(" "),e("li",[t._v("用 computed 处理")])]),t._v(" "),e("h3",{attrs:{id:"_1-17-vue-常用指令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-17-vue-常用指令"}},[t._v("#")]),t._v(" 1.17 vue 常用指令")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("v-model")]),t._v(" 多用于表单元素实现双向数据绑定（同 angular 中的 ng-model）")]),t._v(" "),e("li",[e("code",[t._v("v-bind")]),t._v(" 动态绑定 作用： 及时对页面的数据进行更改")]),t._v(" "),e("li",[e("code",[t._v("v-on:click")]),t._v(" 给标签绑定函数，可以缩写为@，例如绑定一个点击函数 函数必须写在 methods 里面")]),t._v(" "),e("li",[e("code",[t._v("v-for")]),t._v(' 格式： v-for="字段名 in(of) 数组 json" 循环数组或 json(同 angular 中的 ng-repeat)')]),t._v(" "),e("li",[e("code",[t._v("v-show")]),t._v(" 显示内容 （同 angular 中的 ng-show）")]),t._v(" "),e("li",[e("code",[t._v("v-hide")]),t._v(" 隐藏内容（同 angular 中的 ng-hide）")]),t._v(" "),e("li",[e("code",[t._v("v-if")]),t._v(" 显示与隐藏 （dom 元素的删除添加 同 angular 中的 ng-if 默认值为 false）")]),t._v(" "),e("li",[e("code",[t._v("v-else-if")]),t._v(" 必须和 v-if 连用")]),t._v(" "),e("li",[e("code",[t._v("v-else")]),t._v(" 必须和 v-if 连用 不能单独使用 否则报错 模板编译错误")]),t._v(" "),e("li",[e("code",[t._v("v-text")]),t._v(" 解析文本")]),t._v(" "),e("li",[e("code",[t._v("v-html")]),t._v(" 解析 html 标签")]),t._v(" "),e("li",[e("code",[t._v("v-bind:class")]),t._v(' 三种绑定方法 1、对象型 \'{red:isred}\' 2、三元型 \'isred?"red":"blue"\' 3、数组型 \'[{red:"isred"},{blue:"isblue"}]\'')]),t._v(" "),e("li",[e("code",[t._v("v-once")]),t._v(" 进入页面时 只渲染一次 不在进行渲染")]),t._v(" "),e("li",[e("code",[t._v("v-cloak")]),t._v(" 防止闪烁")]),t._v(" "),e("li",[e("code",[t._v("v-pre")]),t._v(" 把标签内部的元素原位输出")])]),t._v(" "),e("h3",{attrs:{id:"_1-18-组件传值方式有哪些"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-18-组件传值方式有哪些"}},[t._v("#")]),t._v(" 1.18 组件传值方式有哪些")]),t._v(" "),e("ul",[e("li",[t._v("父传子：子组件通过 "),e("code",[t._v("props['xx']")]),t._v(" 来接收父组件传递的属性 "),e("code",[t._v("xx")]),t._v(" 的值")]),t._v(" "),e("li",[t._v("子传父：子组件通过 "),e("code",[t._v("this.$emit('fnName',value)")]),t._v(" 来传递,父组件通过接收 "),e("code",[t._v("fnName")]),t._v(" 事件方法来接收回调")]),t._v(" "),e("li",[t._v("其他方式：通过创建一个 "),e("code",[t._v("bus")]),t._v("，进行传值")]),t._v(" "),e("li",[t._v("使用 "),e("code",[t._v("Vuex")])])]),t._v(" "),e("h3",{attrs:{id:"_1-19-vue-loader-是什么-使用它的用途有哪些"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-19-vue-loader-是什么-使用它的用途有哪些"}},[t._v("#")]),t._v(" 1.19 vue-loader 是什么？使用它的用途有哪些？")]),t._v(" "),e("p",[t._v("解析和转换.vue 文件。\n提取出其中的逻辑代码 "),e("code",[t._v("script")]),t._v(",样式代码 "),e("code",[t._v("style")]),t._v(",以及 HTML 模板"),e("code",[t._v("template")]),t._v("，再分别把他们交给对应的 loader 去处理,最后将他们组装成一个 "),e("code",[t._v("commonjs")]),t._v(" 模块；module.exports 出一个 vue.js 组件对象；\n用途：js 可以写 es6、style 样式可以 scss 或 less、template 可以加 jade 等")]),t._v(" "),e("h3",{attrs:{id:"_1-20-页面闪烁"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-20-页面闪烁"}},[t._v("#")]),t._v(" 1.20 页面闪烁")]),t._v(" "),e("p",[t._v("Vue. js 提供了一个 "),e("code",[t._v("v-cloak")]),t._v(" 指令，该指令一直保持在元素上，直到关联实例结束编译。当和 CSS 一起使用时，这个指令可以隐藏未编译的标签，直到实例编译结束。用法如下。")]),t._v(" "),e("div",{staticClass:"language-html extra-class"},[e("pre",{pre:!0,attrs:{class:"language-html"}},[e("code",[t._v("[v-cloak]{ display:none; }\n\n"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("v-cloak")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("{{ title }}"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),e("h3",{attrs:{id:"_1-21-vuejs-与-angularjs-以及-react-的区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-21-vuejs-与-angularjs-以及-react-的区别"}},[t._v("#")]),t._v(" 1.21 vuejs 与 angularjs 以及 react 的区别")]),t._v(" "),e("p",[t._v("相同点：")]),t._v(" "),e("p",[t._v("1、 都支持指令：内置指令和自定义指令。")]),t._v(" "),e("p",[t._v("2、 都支持过滤器：内置过滤器和自定义过滤器。")]),t._v(" "),e("p",[t._v("3、 都支持双向数据绑定。")]),t._v(" "),e("p",[t._v("4、 都不支持低端浏览器。")]),t._v(" "),e("p",[t._v("不同点：")]),t._v(" "),e("p",[t._v("1、 AngularJS 的学习成本高，比如增加了 Dependency Injection 特性，而 Vue.js 本身提供的 API 都比较简单、直观。")]),t._v(" "),e("p",[t._v("2、 在性能上，AngularJS 依赖对数据做脏检查，所以 Watcher 越多越慢。")]),t._v(" "),e("p",[t._v("3、 Vue.js 使用基于依赖追踪的观察并且使用异步队列更新。所有的数据都是独立触发的。")]),t._v(" "),e("p",[t._v("4、 对于庞大的应用来说，这个优化差异还是比较明显的。")]),t._v(" "),e("h3",{attrs:{id:"_1-22-vue-生命周期"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-22-vue-生命周期"}},[t._v("#")]),t._v(" 1.22 Vue 生命周期")]),t._v(" "),e("ul",[e("li",[e("p",[e("code",[t._v("beforeCreate")]),t._v(" 是 new Vue()之后触发的第一个钩子，在当前阶段"),e("code",[t._v("data")]),t._v("、"),e("code",[t._v("methods")]),t._v("、"),e("code",[t._v("computed")]),t._v("以及"),e("code",[t._v("watch")]),t._v("上的数据和方法都不能被访问。")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("created")]),t._v("在实例创建完成后发生，当前阶段已经完成了数据观测，也就是可以使用数据，更改数据，在这里更改数据不会触发 updated 函数。可以做一些初始数据的获取，在当前阶段无法与 Dom 进行交互，如果非要想，可以通过 "),e("code",[t._v("vm.$nextTick")]),t._v(" 来访问 Dom。")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("beforeMount")]),t._v(" 发生在挂载之前，在这之前 template 模板已导入渲染函数编译。而当前阶段虚拟 Dom 已经创建完成，即将开始渲染。在此时也可以对数据进行更改，不会触发 updated。")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("mounted")]),t._v(" 在挂载完成后发生，在当前阶段，真实的 Dom 挂载完毕，数据完成双向绑定，可以访问到 Dom 节点，使用"),e("code",[t._v("$refs")]),t._v(" 属性对 Dom 进行操作。")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("beforeUpdate")]),t._v(" 发生在更新之前，也就是响应式数据发生更新，虚拟 dom 重新渲染之前被触发，你可以在当前阶段进行更改数据，不会造成重渲染。")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("updated")]),t._v(" 发生在更新完成之后，当前阶段组件 Dom 已完成更新。要注意的是避免在此期间更改数据，因为这可能会导致无限循环的更新。")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("beforeDestroy")]),t._v(" 发生在实例销毁之前，在当前阶段实例完全可以被使用，我们可以在这时进行善后收尾工作，比如清除计时器。")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("destroyed")]),t._v(" 发生在实例销毁之后，这个时候只剩下了 dom 空壳。组件已被拆解，数据绑定被卸除，监听被移出，子实例也统统被销毁。")])])]),t._v(" "),e("h3",{attrs:{id:"_1-23-vue-use-vuex-做了什么"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-23-vue-use-vuex-做了什么"}},[t._v("#")]),t._v(" 1.23 Vue.use(VueX) 做了什么？")]),t._v(" "),e("p",[t._v("再看 install 方法之前，我们需要先了解一下"),e("code",[t._v("vuex.use")]),t._v("方法都做了什么，源码位置位于 Vue 源码项目中的 "),e("code",[t._v("src/global-api/use.js")])]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("Vue"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("use")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("plugin"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Function "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Object")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" installedPlugins "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_installedPlugins "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_installedPlugins "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Vue检测是否已经注册过这个插件， 如果已经注册过就直接返回")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("installedPlugins"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("indexOf")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("plugin"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// additional parameters")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 把参数截取出来组成一个数组，后面需要作为apply的第二个参数传入，注意这里不要第一个参数，因为第一个参数是我们的插件，比如(vuex,vueRouter、elementui)等；")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" args "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("toArray")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arguments"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  args"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("unshift")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 把Vue作为第一个参数")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" plugin"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("install "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"function"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果插件有intall方法就直接调用他的install方法，并把args传入。")]),t._v("\n    plugin"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("apply")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("plugin"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" args"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" plugin "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"function"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("plugin")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("apply")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" args"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  installedPlugins"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("plugin"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("p",[t._v("接下来我们看 Vuex 的 install 方法，源码位置在 Vuex 的 "),e("code",[t._v("src/store.js")])]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("_Vue")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Vue "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" _Vue "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" Vue"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这里也是判断Vue是否已经注册过vuex了，如果注册过就直接返回，注意vuex是单例模式")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("__DEV__"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("error")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"[vuex] already installed. Vue.use(Vuex) should be called only once."')]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  Vue "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" _Vue"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("applyMixin")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Vue"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 调用applyMixin， 看下这个函数干了啥")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("applyMixin 方法 源码位于 Vue 的 "),e("code",[t._v("src/mixin.js")])]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("Vue")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" version "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Vue"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("version"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'.'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取vue的版本")]),t._v("\n\n   "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("version "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果版本大于等于2， 就在vue的beforeCreate中混入vuexInit函数， 接下来看一下vuexInit")]),t._v("\n     Vue"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("mixin")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" beforeCreate"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" vuexInit "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n   "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这段代码可以不看， 针对vue低版本的vuex的处理")]),t._v("\n     "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// override init and inject vuex init procedure")]),t._v("\n     "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// for 1.x backwards compatibility.")]),t._v("\n     "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" _init "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Vue")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_init\n     "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Vue")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("_init")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("options "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n       options"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("init "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" options"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("init\n         "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("vuexInit"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("concat")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("options"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("init"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n         "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" vuexInit\n       "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("_init")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" options"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n     "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n   "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n   "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n    * Vuex init hook, injected into each instances init hooks list.\n    */")]),t._v("\n\n   "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("vuexInit")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 当我们实例化vue的时候就会调用这个函数了。")]),t._v("\n     "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" options "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$options "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取vue的$options")]),t._v("\n     "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// store injection")]),t._v("\n     "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("options"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("store"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 判断options中是否存在store属性，这里就是我们在vue的main.js中实例化Vue时写的new Vue({store}).$mount('app')")]),t._v("\n       "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$store "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" options"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("store "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'function'")]),t._v("\n         "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" options"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("store")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n         "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" options"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("store  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将vuex绑定到Vue实例的$store属性上")]),t._v("\n     "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("options"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("parent "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" options"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("parent"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$store"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n       "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 这里的代码的意思是，我们需要在任何Vue的组件中都能通过使用this.$store直接调用vuex，\n       所以vuex给我们做了这个工作，如果当前组件的option没有store属性，\n       就看他的父组件上有没有，直到拿到store，然后赋值给$store属性，\n       这样我们就能在Vue的组件中使用this.$store了。*/")]),t._v("\n       "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$store "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" options"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("parent"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$store\n     "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n   "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("总结 "),e("code",[t._v("Vue.use(vuex)")])]),t._v(" "),e("ul",[e("li",[t._v("判断 vue 是否已经注册过 vuex 插件；")]),t._v(" "),e("li",[t._v("将"),e("code",[t._v("vuexInit")]),t._v("函数混入到 vue 的 "),e("code",[t._v("beforeCreate")]),t._v(" 生命周期中;")]),t._v(" "),e("li",[t._v("实例化 vue 时，会在 vue 每个实例上添加"),e("code",[t._v("$store")]),t._v("属性，并将vuex的实例绑定到"),e("code",[t._v("$store")]),t._v(" 属性上。")])]),t._v(" "),e("h2",{attrs:{id:"component"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#component"}},[t._v("#")]),t._v(" Component")]),t._v(" "),e("h3",{attrs:{id:"_2-1-keep-alive-是什么"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-keep-alive-是什么"}},[t._v("#")]),t._v(" 2.1 keep-alive 是什么？")]),t._v(" "),e("p",[t._v("如果需要在组件切换的时候，保存一些组件的状态防止多次渲染，就可以使用 "),e("code",[t._v("keep-alive")]),t._v(" 组件包裹需要保存的组件。")]),t._v(" "),e("p",[t._v("两个重要属性，"),e("code",[t._v("include")]),t._v(" 缓存组件名称，"),e("code",[t._v("exclude")]),t._v(" 不需要缓存的组件名称。")]),t._v(" "),e("h3",{attrs:{id:"_2-2-父子组件的生命周期顺序"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-父子组件的生命周期顺序"}},[t._v("#")]),t._v(" 2.2 父子组件的生命周期顺序")]),t._v(" "),e("ol",[e("li",[t._v("加载渲染过程：")])]),t._v(" "),e("ul",[e("li",[t._v("父 "),e("code",[t._v("beforeCreate")])]),t._v(" "),e("li",[t._v("父 "),e("code",[t._v("created")])]),t._v(" "),e("li",[t._v("父 "),e("code",[t._v("beforeMount")])]),t._v(" "),e("li",[t._v("子 "),e("code",[t._v("beforeCreate")])]),t._v(" "),e("li",[t._v("子 "),e("code",[t._v("created")])]),t._v(" "),e("li",[t._v("子 "),e("code",[t._v("beforeMount")])]),t._v(" "),e("li",[t._v("子 "),e("code",[t._v("mounted")])]),t._v(" "),e("li",[t._v("父 "),e("code",[t._v("mounted")])])]),t._v(" "),e("ol",{attrs:{start:"2"}},[e("li",[t._v("子组件更新过程：")])]),t._v(" "),e("ul",[e("li",[t._v("父 "),e("code",[t._v("beforeUpdate")])]),t._v(" "),e("li",[t._v("子 "),e("code",[t._v("beforeUpdate")])]),t._v(" "),e("li",[t._v("子 "),e("code",[t._v("updated")])]),t._v(" "),e("li",[t._v("父 "),e("code",[t._v("updated")])])]),t._v(" "),e("ol",{attrs:{start:"3"}},[e("li",[t._v("父组件更新过程：")])]),t._v(" "),e("ul",[e("li",[t._v("父 "),e("code",[t._v("beforeUpdate")])]),t._v(" "),e("li",[t._v("父 "),e("code",[t._v("updated")])])]),t._v(" "),e("ol",{attrs:{start:"4"}},[e("li",[t._v("销毁过程：")])]),t._v(" "),e("ul",[e("li",[t._v("父 "),e("code",[t._v("beforeDestroy")])]),t._v(" "),e("li",[t._v("子 "),e("code",[t._v("beforeDestroy")])]),t._v(" "),e("li",[t._v("子 "),e("code",[t._v("destroyed")])]),t._v(" "),e("li",[t._v("父 "),e("code",[t._v("destroyed")])])]),t._v(" "),e("h2",{attrs:{id:"vuex"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vuex"}},[t._v("#")]),t._v(" VueX")]),t._v(" "),e("h3",{attrs:{id:"_3-1-vuex-的核心概念"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-vuex-的核心概念"}},[t._v("#")]),t._v(" 3.1 vuex 的核心概念")]),t._v(" "),e("ol",[e("li",[e("code",[t._v("state")]),t._v(" => 基本数据")]),t._v(" "),e("li",[e("code",[t._v("getters")]),t._v(" => 从基本数据派生的数据")]),t._v(" "),e("li",[e("code",[t._v("mutations")]),t._v(" => 修改数据，同步")]),t._v(" "),e("li",[e("code",[t._v("actions")]),t._v(" => 修改数据，异步 (Action 提交的是 mutation，而不是直接变更状态)")]),t._v(" "),e("li",[e("code",[t._v("modules")]),t._v(" => 模块化 Vuex")])]),t._v(" "),e("h3",{attrs:{id:"_3-2-vuex-是什么-怎么使用-哪种功能场景使用它"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-vuex-是什么-怎么使用-哪种功能场景使用它"}},[t._v("#")]),t._v(" 3.2 vuex 是什么？怎么使用？哪种功能场景使用它？")]),t._v(" "),e("p",[t._v("Vuex 是一个专为 Vue.js 应用程序开发的状态管理器，采用集中式存储管理应用的所有组件的状态，主要是为了多页面、多组件之间的通信。\nVuex 有 5 个重要的属性，分别是 State、Getter、Mutation、Action、Module，由 view 层发起一个 Action 给 Mutation，在 Mutation 中修改状态，返回新的状态，通过 Getter 暴露给 view 层的组件或者页面，页面监测到状态改变于是更新页面。如果你的项目很简单，最好不要使用 Vuex，对于大型项目，Vuex 能够更好的帮助我们管理组件外部的状态，一般可以运用在购物车、登录状态、播放等场景中。")]),t._v(" "),e("h3",{attrs:{id:"_3-3-多个组件之间如何拆分各自的-state-每块小的组件有自己的状态-它们之间还有一些公共的状态需要维护-如何思考这块"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-多个组件之间如何拆分各自的-state-每块小的组件有自己的状态-它们之间还有一些公共的状态需要维护-如何思考这块"}},[t._v("#")]),t._v(" 3.3 多个组件之间如何拆分各自的 state，每块小的组件有自己的状态，它们之间还有一些公共的状态需要维护，如何思考这块")]),t._v(" "),e("p",[t._v("公共的数据部分可以提升至和他们最近的父组件，由父组件派发\n公共数据可以放到 vuex 中统一管理，各组件分别获取")]),t._v(" "),e("h2",{attrs:{id:"router"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#router"}},[t._v("#")]),t._v(" Router")]),t._v(" "),e("h3",{attrs:{id:"_4-1-vue-router-路由的两种模式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-vue-router-路由的两种模式"}},[t._v("#")]),t._v(" 4.1 vue-router 路由的两种模式")]),t._v(" "),e("p",[t._v("vue-router 中默认使用的是 hash 模式")]),t._v(" "),e("p",[t._v("hash 模式, 带#。如：http://localhost:8080/#/pageA。改变hash，浏览器本身不会有任何请求服务器动作的，但是页面状态和url已经关联起来了。\nhistory 模式，不带#， 如：http://localhost:8080/ 正常的而路径，并没有#。基于 HTML5 的 pushState、replaceState 实现")]),t._v(" "),e("h3",{attrs:{id:"_4-2-vue-router-有哪几种导航钩子"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-vue-router-有哪几种导航钩子"}},[t._v("#")]),t._v(" 4.2 vue-router 有哪几种导航钩子？")]),t._v(" "),e("ol",[e("li",[t._v("全局导航钩子："),e("code",[t._v("router.beforeEach(to,from,next)")])]),t._v(" "),e("li",[t._v("组件内的钩子 "),e("code",[t._v("beforeRouteEnter (to, from, next)")]),t._v(" "),e("code",[t._v("beforeRouteUpdate (to, from, next)")]),t._v(" "),e("code",[t._v("beforeRouteLeave (to, from, next)")])]),t._v(" "),e("li",[t._v("单独路由独享组件 "),e("code",[t._v("beforeEnter: (to, from, next)")])])]),t._v(" "),e("h3",{attrs:{id:"_4-3-route和-router-的区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-route和-router-的区别"}},[t._v("#")]),t._v(" 4.3 $route和$router 的区别")]),t._v(" "),e("p",[e("code",[t._v("$route")]),t._v(" 是“路由信息对象”，包括"),e("code",[t._v("path")]),t._v("，"),e("code",[t._v("params")]),t._v("，"),e("code",[t._v("hash")]),t._v("，"),e("code",[t._v("query")]),t._v("，"),e("code",[t._v("fullPath")]),t._v("，"),e("code",[t._v("matched")]),t._v("，"),e("code",[t._v("name")]),t._v("等路由信息参数。\n"),e("code",[t._v("$router")]),t._v(" 是“路由实例”对象, 包括了路由的跳转方法，钩子函数等")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("\n")])])])])}),[],!1,null,null,null);a.default=n.exports}}]);