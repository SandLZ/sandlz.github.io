import{_ as s,p as n,q as a,a1 as e}from"./framework-201fec1f.js";const c={},t=e(`<h1 id="命名" tabindex="-1"><a class="header-anchor" href="#命名" aria-hidden="true">#</a> 命名</h1><h2 id="使用无嵌套的纯类名选择器" tabindex="-1"><a class="header-anchor" href="#使用无嵌套的纯类名选择器" aria-hidden="true">#</a> 使用无嵌套的纯类名选择器</h2><ol><li>CSS选择器是从右向左进行匹配，如<code>.box &gt; div</code>是先匹配所有<code>&lt;div&gt;</code>元素，再匹配<code>.box</code>类名元素；</li><li>优先级混乱；</li><li>布局脆弱（修改时）；</li></ol><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.box</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token selector">.box .pic</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token selector">.box .pic .desc</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>to</strong></p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.cs-box</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token selector">.cs-box-pic</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token selector">.cs-box-pic-desc</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="面向属性的命名" tabindex="-1"><a class="header-anchor" href="#面向属性的命名" aria-hidden="true">#</a> 面向属性的命名</h2><p>复用</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.dn</span> <span class="token punctuation">{</span> <span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token selector">.db</span> <span class="token punctuation">{</span> <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token selector">.ml20</span> <span class="token punctuation">{</span> <span class="token property">margin-left</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="状态类名" tabindex="-1"><a class="header-anchor" href="#状态类名" aria-hidden="true">#</a> 状态类名</h2><p>场景</p><ul><li>禁用</li><li>选中</li><li>激活</li></ul><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>使用<code>.active</code> 、<code>.checked</code>等表示状态的类名进行交互控制</p></div><p>当后期更改激活样式时，只需修改<code>CSS</code>即可.</p><h2 id="汇总" tabindex="-1"><a class="header-anchor" href="#汇总" aria-hidden="true">#</a> 汇总</h2><h3 id="命名书写" tabindex="-1"><a class="header-anchor" href="#命名书写" aria-hidden="true">#</a> 命名书写</h3><ol><li>建议使用小写，使用英文单词或缩写(推荐)，对于专有名词，可使用拼音，如：<code>.cs-logo-weibo {}</code>, 不建议使用驼峰命名，驼峰命名建议专门给<code>JS Dom</code>使用, 便于和<code>CSS</code>样式区分；</li><li>组合命名，可以<strong>短横线</strong>或<strong>下划线</strong>连接，也可以组合使用，也可以连续使用，只要在同一项目中保持一致即可；<div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.cs-logo-weibo</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token selector">.cs_logo_weibo</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token selector">.cs-logo--weibo</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token selector">.cs-logo__weibo</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>组合个数不要超过<strong>5</strong>个；</li><li>设置<strong>统一前缀</strong>，强化品牌的同时避免冲突：<div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.cs-header</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token selector">.cs-logo</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h3 id="选择器类型" tabindex="-1"><a class="header-anchor" href="#选择器类型" aria-hidden="true">#</a> 选择器类型</h3><p>CSS分为3个部分：</p><ul><li>CSS 重置样式</li><li>CSS 基础样式</li><li>CSS 交互变化样式</li></ul><ol><li>重置样式 使用<strong>标签选择器</strong>或<strong>属性选择器</strong>等</li></ol><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">body, p</span> <span class="token punctuation">{</span> <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span> <span class="token punctuation">}</span>

<span class="token selector">[type=&quot;radio&quot;],
[type=&quot;checkbox&quot;]</span> <span class="token punctuation">{</span>
  <span class="token property">border</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>基础样式 全部使用类选择器，没有层级，没有标签</li></ol><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.cs-module .img</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token selector">.cs-module-ul &gt; li</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>to</strong></p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.cs-module-img</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token selector">.cs-module-li</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>交互变化样式</li></ol><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.cs-content.active</span> <span class="token punctuation">{</span>
  height<span class="token punctuation">;</span> auto
<span class="token punctuation">}</span>
<span class="token selector">.active &gt; .cs-content-more</span> <span class="token punctuation">{</span>
  <span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>无标签，无层级</li><li>状态类名标识符</li><li>面向属性命名的CSS样式库</li></ul>`,29),i=[t];function l(o,p){return n(),a("div",null,i)}const u=s(c,[["render",l],["__file","name.html.vue"]]);export{u as default};
