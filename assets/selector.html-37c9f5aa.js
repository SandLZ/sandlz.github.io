import{_ as s,p as n,q as a,a1 as t}from"./framework-201fec1f.js";const p={},l=t(`<h1 id="选择符" tabindex="-1"><a class="header-anchor" href="#选择符" aria-hidden="true">#</a> 选择符</h1><p>CSS 选择符有以下几种：</p><ul><li>后代选择符空格 ( )</li><li>子代选择符箭头 (&gt;)</li><li>相邻兄弟选择符 (+)</li><li>随后兄弟选择符弯弯 (~)</li><li>列选择符双管道 (||)</li></ul><h2 id="后代选择符空格" tabindex="-1"><a class="header-anchor" href="#后代选择符空格" aria-hidden="true">#</a> 后代选择符空格( )</h2><p>很常见，如<code>.wrapper .container { }</code></p><h3 id="不同优先级下的后代选择符" tabindex="-1"><a class="header-anchor" href="#不同优先级下的后代选择符" aria-hidden="true">#</a> 不同优先级下的后代选择符</h3><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">
  <span class="token selector">.lightblue</span> <span class="token punctuation">{</span>
    <span class="token property">color</span><span class="token punctuation">:</span> lightblue<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token selector">.darkblue</span> <span class="token punctuation">{</span>
    <span class="token property">color</span><span class="token punctuation">:</span> darkblue<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>lightblue<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>darkblue<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>1. 颜色是？<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>darkblue<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>lightblue<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>2. 颜色是？<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="lightblue"><div class="darkblue"><p>1. 颜色是？</p></div></div><div class="darkblue"><div class="lightblue"><p>2. 颜色是？</p></div></div><p>例 1： 将 类选择器 -&gt; 后代选择符，结果是？</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">
  <span class="token selector">.lightblue p</span> <span class="token punctuation">{</span>
    <span class="token property">color</span><span class="token punctuation">:</span> lightblue<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token selector">.darkblue p</span> <span class="token punctuation">{</span>
    <span class="token property">color</span><span class="token punctuation">:</span> darkblue<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>lightblue<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>darkblue<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>1. 颜色是？<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>darkblue<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>lightblue<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>2. 颜色是？<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="lightblue"><div class="darkblue"><p>1. 颜色是？</p></div></div><div class="darkblue"><div class="lightblue"><p>2. 颜色是？</p></div></div><p>why?</p><ol><li>当包含后代选择符时，整个选择器的优先级和 DOM 层级没有关系，看落地元素的优先级：P；</li><li><code>&lt;p&gt;</code>元素彼此分离，非嵌套，DOM 层级平行；选择器优先级也一样（类选择器 10 + 标签选择器 1 = 11），相同；</li><li>看在 CSS 文件中的位置，后来居上。</li></ol><p>例 2：</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>.lightblue.lightblue p { color: lightblue; } .darkblue p { color: darkblue; }
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="lightblue"><div class="darkblue"><p>1. 颜色是？</p></div></div><div class="darkblue"><div class="lightblue"><p>2. 颜色是？</p></div></div><p>why: ；<code>.lightblue.lightblue p</code> 优先级更高</p><h2 id="子代选择符箭头" tabindex="-1"><a class="header-anchor" href="#子代选择符箭头" aria-hidden="true">#</a> 子代选择符箭头(&gt;)</h2><p>子选择符只会匹配<strong>第一代子元素</strong>，而后代选择符会匹配<strong>所有子元素</strong></p><p>注：父子元素不同的<code>text-decoration</code>属性值会不断累加</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">
  <span class="token selector">ol li</span> <span class="token punctuation">{</span>
    <span class="token property">color</span><span class="token punctuation">:</span> darkblue<span class="token punctuation">;</span>
    <span class="token property">text-decoration</span><span class="token punctuation">:</span> underline<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token selector">ol &gt; li</span> <span class="token punctuation">{</span>
    <span class="token property">color</span><span class="token punctuation">:</span> lightblue<span class="token punctuation">;</span>
    <span class="token property">-webkit-text-decoration</span><span class="token punctuation">:</span> underline wavy<span class="token punctuation">;</span>
    <span class="token property">text-decoration</span><span class="token punctuation">:</span> underline wavy<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ol</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>颜色是？<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>
    颜色是？
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>颜色是？<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>颜色是？<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>颜色是？<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ol</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="cs-demo"><ol><li>颜色是？</li><li>颜色是？ <ul><li>颜色是？</li><li>颜色是？</li></ul></li><li>颜色是？</li></ol></div><h3 id="适用场景" tabindex="-1"><a class="header-anchor" href="#适用场景" aria-hidden="true">#</a> 适用场景</h3><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>尽量不使用子选择符，尽管性能优于后代选择符，但维护性较差</p></div><p>例：区分 A、B 区域的样式，通常在容器外层新增一个类重置，如</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.cs-module-reset-b &gt; .cs-module-x</span> <span class="token punctuation">{</span>
  <span class="token comment">/* reset */</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>to</strong></p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.cs-module-reset-b .cs-module-x</span> <span class="token punctuation">{</span>
  <span class="token comment">/* reset */</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>why?</p><ol><li>使用了子选择符，元素层级关系就强制绑定了。不利于后期更改；</li><li><strong>使用子选择符的主要目的是避免冲突</strong></li></ol><p>适合使用的场景：</p><ol><li><strong>状态类名控制</strong>：避免影响后代存在<code>.active</code>切换的场景</li><li><strong>标签受限</strong>： 当<code>&lt;li&gt;</code>重复嵌套，无法修改标签名或类名的时候</li><li><strong>层级位置与动态判断</strong>：某些场景切换元素的样式，达到需求。</li></ol><h2 id="相邻兄弟选择符加好" tabindex="-1"><a class="header-anchor" href="#相邻兄弟选择符加好" aria-hidden="true">#</a> 相邻兄弟选择符加好（+）</h2><p><strong>选择相邻的兄弟元素，但只能选择后面一个兄弟</strong></p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">
  <span class="token selector">.cs-li + li</span> <span class="token punctuation">{</span>
    <span class="token property">color</span><span class="token punctuation">:</span> skyblue<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ol</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>颜色是？<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>cs-li<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>颜色是？<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>颜色是？<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>颜色是？<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ol</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li>颜色是？</li><li class="cs-li">颜色是？</li><li>颜色是？</li><li>颜色是？</li></ol><p>实现类似<code>:first-child</code>效果</p><p>例：希望除了第一个列表以外的其他列表都有<code>margin-top</code>属性</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.cs-li:not(:first-child)</span> <span class="token punctuation">{</span>
  <span class="token property">margin-top</span><span class="token punctuation">:</span> 1em<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>相邻兄弟选择符方式：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.cs-li + .cs-li</span> <span class="token punctuation">{</span>
  <span class="token property">margin-top</span><span class="token punctuation">:</span> 1em<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="随后兄弟选择符弯弯" tabindex="-1"><a class="header-anchor" href="#随后兄弟选择符弯弯" aria-hidden="true">#</a> 随后兄弟选择符弯弯（~）</h2><p>相邻兄弟选择符只会匹配它后面的<strong>第一个兄弟元素</strong>，而随后兄弟选择符会匹配后面<strong>所有的兄弟元素</strong></p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">
  <span class="token selector">.cs-h ~ .cs-li</span> <span class="token punctuation">{</span>
    <span class="token property">color</span><span class="token punctuation">:</span> skyblue<span class="token punctuation">;</span>
    <span class="token property">text-decoration</span><span class="token punctuation">:</span> underline<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token selector">.cs-h + .cs-li</span> <span class="token punctuation">{</span>
      <span class="token property">text-decoration</span><span class="token punctuation">:</span> underline wavy<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>cs-li<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>列表内容1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h4</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>cs-h<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>标题<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h4</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>cs-li<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>列表内容2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>cs-li<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>列表内容3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p class="cs-li">列表内容1</p><h4 class="cs-h">标题</h4><p class="cs-li">列表内容2</p><p class="cs-li">列表内容3</p><h3 id="为什么没有前面兄弟选择符" tabindex="-1"><a class="header-anchor" href="#为什么没有前面兄弟选择符" aria-hidden="true">#</a> 为什么没有前面兄弟选择符？</h3><p>受限于<code>DOM</code>渲染机制: 浏览器解析HTML文档是从前往后，由外及里的； 如果CSS支持前面兄弟选择符或者父元素选择符的话，就必须等到所有子元素加载完毕才能渲染HTML。</p><h2 id="列选择符双管道" tabindex="-1"><a class="header-anchor" href="#列选择符双管道" aria-hidden="true">#</a> 列选择符双管道（||）</h2>`,54),e=[l];function c(o,i){return n(),a("div",null,e)}const d=s(p,[["render",c],["__file","selector.html.vue"]]);export{d as default};
