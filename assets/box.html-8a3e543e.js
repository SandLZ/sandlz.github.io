import{_ as e,p as o,q as n,a1 as i}from"./framework-201fec1f.js";const s={},t=i(`<h1 id="盒模型" tabindex="-1"><a class="header-anchor" href="#盒模型" aria-hidden="true">#</a> 盒模型</h1><blockquote><p>页面就是由一个个盒模型堆砌起来的，每个 HTML 元素都可以叫做盒模型，盒模型由外而内包括：边距（margin）、边框（border）、填充（padding）、内容（content）。它在页面中所占的实际宽度是 margin + border + paddint + content 的宽度相加。</p></blockquote><p>盒模型有标准盒模型和 IE 的盒模型。</p><ul><li>标准盒模型(content-box)</li><li>IE 盒模型(border-box)</li></ul><div><img src="https://github.com/sandlz/images/raw/master/uPic/box_normal.jpeg" style="width:80%;"></div><div><img src="https://github.com/sandlz/images/raw/master/uPic/box_ie.jpeg" style="width:80%;"></div><p>在 CSS 中盒模型被分为两种，第一种是 W3C 的标准模型，第二种是 IE 怪异盒模型。不同之处在于后者的宽高定义的是可见元素框的尺寸，而不是元素框的内容区尺寸。目前对于浏览器大多数元素都是基于 W3C 标准的盒模型，但对于表单 form 中的部分元素还是基于 IE 的怪异盒模型，如 input 里的 radio、checkbox、button 等元素，如果给其设置 border 和 padding 它们也只会往元素盒内延伸</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.box</span> <span class="token punctuation">{</span>
  <span class="token property">box-sizing</span><span class="token punctuation">:</span> content-box | bordrer-box | padding-box | inherit<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>content-box</code> (默认)标准盒模型</li><li><code>bordrer-box</code> (IE)怪异盒模型</li><li><code>padding-box</code> (FireFox)</li></ul><p>注意：IE 浏览器在<code>getComputedStyle</code>得到<code>width</code>、<code>height</code>是按照标准模式计算的，而不论<code>box-sizing</code>的取值.</p>`,10),a=[t];function c(d,r){return o(),n("div",null,a)}const p=e(s,[["render",c],["__file","box.html.vue"]]);export{p as default};
