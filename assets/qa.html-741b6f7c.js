import{_ as a,p as s,q as n,a1 as e}from"./framework-201fec1f.js";const t={},i=e(`<h1 id="qa" tabindex="-1"><a class="header-anchor" href="#qa" aria-hidden="true">#</a> QA</h1><h2 id="_1-css-选择器优先级排序" tabindex="-1"><a class="header-anchor" href="#_1-css-选择器优先级排序" aria-hidden="true">#</a> 1. css 选择器优先级排序</h2><details class="custom-container details"><summary>答案</summary><ul><li>同一元素引用多个样式，排在后面的样式属性的优先级高</li><li>样式选择器的类型不同时候，id 选择器&gt;class 选择器&gt;标签选择器</li><li>标签之间存在层级包含关系时，后代元素会继承祖先元素的样式。如果后代元素定义了与祖先元素相同的样式，则祖先的相同的样式属性会被覆盖，继承的样式的优先级比较低</li><li>样式来源不同时，优先顺序为：内联样式&gt;内部样式&gt;外部样式&gt;浏览器用户自定义样式&gt;浏览器默认样式</li><li>三句话：越具体优先级越高，同样优先级的后面的覆盖前面的，带有!important 标记的样式属性的优先级最高，但是最好少用</li></ul></details><h2 id="_2-css-开启硬件加速" tabindex="-1"><a class="header-anchor" href="#_2-css-开启硬件加速" aria-hidden="true">#</a> 2. css 开启硬件加速</h2><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.some</span> <span class="token punctuation">{</span>
  <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateZ</span><span class="token punctuation">(</span>0<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translate3d</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-如何实现固定长宽比的元素" tabindex="-1"><a class="header-anchor" href="#_3-如何实现固定长宽比的元素" aria-hidden="true">#</a> 3. 如何实现固定长宽比的元素</h2><p>使用长宽比的 CSS 属性: <code>aspect-ratio</code></p><h2 id="_4-如何设置多行超出显示省略号" tabindex="-1"><a class="header-anchor" href="#_4-如何设置多行超出显示省略号" aria-hidden="true">#</a> 4. 如何设置多行超出显示省略号</h2><p>使用 <code>-webkit-line-clamp</code> 来设置多行超出显示省略号</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>
<span class="token property">display</span><span class="token punctuation">:</span> -webkit-box<span class="token punctuation">;</span>
<span class="token property">-webkit-box-orient</span><span class="token punctuation">:</span> vertical<span class="token punctuation">;</span>
<span class="token property">-webkit-line-clamp</span><span class="token punctuation">:</span> 2<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5-设置一行超出显示省略号" tabindex="-1"><a class="header-anchor" href="#_5-设置一行超出显示省略号" aria-hidden="true">#</a> 5. 设置一行超出显示省略号</h2><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>
<span class="token property">text-overflow</span><span class="token punctuation">:</span> ellipsis<span class="token punctuation">;</span>
<span class="token property">white-space</span><span class="token punctuation">:</span> nowrap<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_6-html-标签有哪些行内元素" tabindex="-1"><a class="header-anchor" href="#_6-html-标签有哪些行内元素" aria-hidden="true">#</a> 6. HTML 标签有哪些行内元素</h2><p>常见的有：</p><ul><li>a</li><li>img</li><li>picture</li><li>span</li><li>input</li><li>textarea</li><li>select</li><li>label</li></ul><h2 id="_7-网站设置字体时-如何设置优先使用系统默认字体" tabindex="-1"><a class="header-anchor" href="#_7-网站设置字体时-如何设置优先使用系统默认字体" aria-hidden="true">#</a> 7. 网站设置字体时，如何设置优先使用系统默认字体</h2><p><code>system-ui</code> 将会自动选取系统默认字体作为字体</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token property">font-family</span><span class="token punctuation">:</span> system-ui<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_8-自定义滚动条的样式" tabindex="-1"><a class="header-anchor" href="#_8-自定义滚动条的样式" aria-hidden="true">#</a> 8. 自定义滚动条的样式</h2><p>滚动条相关样式都是伪元素，以 scrollbar 打头，有以下伪元素，从 -webkit 中可见兼容性一般，不过无所谓，现在 Chrome 浏览器占大头</p><ul><li><code>::-webkit-scrollbar</code> — 整个滚动条.</li><li><code>::-webkit-scrollbar-button</code> — 滚动条上的按钮 (上下箭头).</li><li><code>::-webkit-scrollbar-thumb</code> — 滚动条上的滚动滑块.</li><li><code>::-webkit-scrollbar-track</code> — 滚动条轨道.</li><li><code>::-webkit-scrollbar-track-piece</code> — 滚动条没有滑块的轨道部分.</li><li><code>::-webkit-scrollbar-corner</code> — 当同时有垂直滚动条和水平滚动条时交汇的部分.</li><li><code>::-webkit-resizer</code> — 某些元素的 corner 部分的部分样式(例:textarea 的可拖动按钮).</li></ul><h2 id="_9-如何匹配前-n-个子元素及最后-n-个子元素" tabindex="-1"><a class="header-anchor" href="#_9-如何匹配前-n-个子元素及最后-n-个子元素" aria-hidden="true">#</a> 9. 如何匹配前 N 个子元素及最后 N 个子元素</h2><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token property">如何匹配最前三个子元素</span><span class="token punctuation">:</span> <span class="token punctuation">:</span><span class="token function">nth-child</span><span class="token punctuation">(</span>-n+3<span class="token punctuation">)</span>
<span class="token property">如何匹配最后三个子元素</span><span class="token punctuation">:</span> <span class="token punctuation">:</span><span class="token function">nth-last-child</span><span class="token punctuation">(</span>-n+3<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,23),c=[i];function l(p,o){return s(),n("div",null,c)}const d=a(t,[["render",l],["__file","qa.html.vue"]]);export{d as default};
