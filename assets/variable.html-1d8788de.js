import{_ as n,p as a,q as s,a1 as e}from"./framework-201fec1f.js";const t={},c=e(`<h1 id="变量" tabindex="-1"><a class="header-anchor" href="#变量" aria-hidden="true">#</a> 变量</h1><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">:root</span> <span class="token punctuation">{</span>
  <span class="token property">--main-text-color</span><span class="token punctuation">:</span> #ff6a00<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.text</span> <span class="token punctuation">{</span>
  <span class="token property">color</span><span class="token punctuation">:</span> <span class="token function">var</span><span class="token punctuation">(</span>--main-text-color<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="语法" tabindex="-1"><a class="header-anchor" href="#语法" aria-hidden="true">#</a> 语法</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>var(value, backValue)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.first</span> <span class="token punctuation">{</span>
  <span class="token comment">/* 当前文字的颜色为red，因为--color不在当前元素内，也不再当前父元素内 */</span>
  <span class="token property">color</span><span class="token punctuation">:</span> <span class="token function">var</span><span class="token punctuation">(</span>--color<span class="token punctuation">,</span> red<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">/* 当前文字的颜色为--main-text-color，如果--main-text-color不存在时，文字颜色为red */</span>
  <span class="token property">color</span><span class="token punctuation">:</span> <span class="token function">var</span><span class="token punctuation">(</span>--color<span class="token punctuation">,</span> <span class="token function">var</span><span class="token punctuation">(</span>--main-text-color<span class="token punctuation">,</span> red<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">/* 当前文字的颜色为 red,white ，所以说var()只可以使用两个参数 */</span>
  <span class="token property">color</span><span class="token punctuation">:</span> <span class="token function">var</span><span class="token punctuation">(</span>--color<span class="token punctuation">,</span> red<span class="token punctuation">,</span> white<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="作用域" tabindex="-1"><a class="header-anchor" href="#作用域" aria-hidden="true">#</a> 作用域</h2><ul><li>子级可以访问父级的变量</li><li>root 可全局访问</li></ul><h2 id="js-操作变量" tabindex="-1"><a class="header-anchor" href="#js-操作变量" aria-hidden="true">#</a> JS 操作变量</h2><p>通过 JavaScript 获取和设置 JavaScript 变量的具体步骤如下，</p><ul><li><p>获取指定 DOM 节点</p></li><li><p>通过 <code>getComputedStyle()</code> 方法获取当前 DOM 节点的 <code>CSSStyleDeclaration</code>对象</p></li><li><p>通过 <code>CSSStyleDeclaration.getPropertyValue(变量名/属性名)</code> 获取指定的变量值</p></li><li><p>通过 <code>Element.style.setProperty()</code> 修改或者设置一个变量的值</p></li></ul>`,11),o=[c];function i(p,l){return a(),s("div",null,o)}const u=n(t,[["render",i],["__file","variable.html.vue"]]);export{u as default};
