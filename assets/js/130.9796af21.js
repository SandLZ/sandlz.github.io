(window.webpackJsonp=window.webpackJsonp||[]).push([[130],{544:function(t,s,a){"use strict";a.r(s);var e=a(26),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"redux-thunk"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#redux-thunk"}},[t._v("#")]),t._v(" redux-thunk")]),t._v(" "),a("p",[a("code",[t._v("thunk")]),t._v(" 一词是一个编程术语，意思是"),a("strong",[t._v("一段执行延迟工作的代码")]),t._v("。我们可以编写一个函数体或代码，用于以后执行工作，而不是现在执行一些逻辑。")]),t._v(" "),a("p",[t._v("特别是对于"),a("code",[t._v("Redux")]),t._v("，"),a("code",[t._v("thunks")]),t._v(" 是一种编写函数的模式，其中包含逻辑，可以与 "),a("code",[t._v("Redux")]),t._v(" 存储的 "),a("code",[t._v("dispatch")]),t._v(" 和 "),a("code",[t._v("getState")]),t._v(" 方法交互。")]),t._v(" "),a("p",[t._v("Thunks是在 "),a("code",[t._v("Redux")]),t._v(" 应用程序中编写异步逻辑的标准方法，通常用于数据获取。但是，它们可以用于各种任务，并且可以包含同步和异步逻辑。")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/reduxjs/redux-thunk",target:"_blank",rel:"noopener noreferrer"}},[t._v("文档地址"),a("OutboundLink")],1)]),t._v(" "),a("h2",{attrs:{id:"why-thunk"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#why-thunk"}},[t._v("#")]),t._v(" Why thunk?")]),t._v(" "),a("p",[t._v("Thunks 允许我们独立于UI层编写额外的Redux相关逻辑。此逻辑可能包括副作用，例如异步请求或生成随机值，以及需要调度多个操作或访问Redux存储状态的逻辑。")]),t._v(" "),a("p",[a("code",[t._v("Redux Reducer")]),t._v(" 不能包含副作用，但实际应用程序需要具有副作用的逻辑。其中一些可能位于组件内部，但一些可能需要位于UI层之外。")]),t._v(" "),a("p",[t._v("Thunks（和其他Redux中间件）为我们提供了一个放置这些副作用的位置。")]),t._v(" "),a("p",[t._v("在组件中直接使用逻辑是很常见的，例如在 "),a("code",[t._v("click")]),t._v(" 处理程序或 "),a("code",[t._v("useEffect")]),t._v(" 挂钩中发出异步请求，然后处理结果。然而，通常需要将尽可能多的逻辑移到UI层之外。这样做可能是为了提高逻辑的可测试性，使UI层尽可能薄和“呈现”，或者改进代码重用和共享。")]),t._v(" "),a("p",[t._v("从某种意义上说，thunk是一个漏洞，您可以提前编写需要与 "),a("code",[t._v("Redux")]),t._v(" 存储交互的任何代码，而无需知道将使用哪个 "),a("code",[t._v("Redux")]),t._v(" 存储。这可以防止逻辑绑定到任何特定的 "),a("code",[t._v("Redux")]),t._v(" 存储实例，并保持其可重用性。")]),t._v(" "),a("h2",{attrs:{id:"使用场景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用场景"}},[t._v("#")]),t._v(" 使用场景")]),t._v(" "),a("p",[t._v("由于 thunks 是一种通用工具，可包含任意逻辑，因此可用于多种用途。最常见的用例是：")]),t._v(" "),a("ul",[a("li",[t._v("将复杂逻辑移出组件")]),t._v(" "),a("li",[t._v("发出异步请求或其他异步逻辑")]),t._v(" "),a("li",[t._v("编写需要在一行或一段时间内分派多个操作的逻辑")]),t._v(" "),a("li",[t._v("编写需要访问getState才能做出决策或在操作中包含其他状态值的逻辑")])]),t._v(" "),a("p",[t._v("Thunk是“一次性”功能，没有生命周期的意义。他们也看不到其他已调度的操作。因此，它们通常不应用于初始化WebSocket之类的持久连接，也不能用于响应其他操作。")]),t._v(" "),a("p",[a("strong",[t._v("Thunks最适合用于复杂的同步逻辑，以及简单到中等的异步逻辑，如发出标准AJAX请求并根据请求结果分派操作。")])]),t._v(" "),a("h2",{attrs:{id:"用法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#用法"}},[t._v("#")]),t._v(" 用法")]),t._v(" "),a("p",[t._v("Redux Toolkit")]),t._v(" "),a("p",[t._v("如果您按照建议使用我们的官方Redux Toolkit包，则无需安装-RTK的configureStore API已默认添加thunk中间件：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" configureStore "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@reduxjs/toolkit'")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" todosReducer "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./features/todos/todosSlice'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" filtersReducer "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./features/filters/filtersSlice'")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" store "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("configureStore")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  reducer"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    todos"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" todosReducer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    filters"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" filtersReducer\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// The thunk middleware was automatically added")]),t._v("\n")])])]),a("p",[t._v("自定义")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" redux-thunk\n")])])]),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" createStore"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" applyMiddleware "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'redux'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" thunk "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'redux-thunk'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" rootReducer "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./reducers/index'")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" store "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createStore")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("rootReducer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("applyMiddleware")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("thunk"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h2",{attrs:{id:"中间件如何工作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#中间件如何工作"}},[t._v("#")]),t._v(" 中间件如何工作？")]),t._v(" "),a("p",[t._v("首先，让我们回顾一下Redux中间件通常是如何工作的。")]),t._v(" "),a("p",[t._v("Redux中间件都编写为一系列3个嵌套函数：")]),t._v(" "),a("ul",[a("li",[t._v("外部函数接收带有{dispatch，getState}的“storeapi”对象")]),t._v(" "),a("li",[t._v("中间函数接收链中的下一个中间件（或实际的store.dispatch方法）")]),t._v(" "),a("li",[t._v("内部函数将在每个操作通过中间件链时被调用")])]),t._v(" "),a("p",[t._v("需要注意的是，可以使用中间件将非操作对象的值传递到存储中。dispatch（），只要中间件拦截这些值并且不让它们到达还原器。")]),t._v(" "),a("p",[t._v("考虑到这一点，我们可以了解thunk中间件的细节。")]),t._v(" "),a("p",[a("code",[t._v("thunk")]),t._v(" 中间件的实际实现非常短-只有大约10行。以下是代码：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 标准中间件定义, 3个嵌套函数")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1) 接收 `{dispatch, getState}`")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2) 接收 `next`")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3) 接收 `action`")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("thunkMiddleware")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" dispatch"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" getState "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("next")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("action")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果 `action` 是方法")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" action "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'function'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 调用 `action`方法并传递`dispatch`、`getState`参数")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("action")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dispatch"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" getState"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 否则，这是正常的 `action`，继续发送")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("action"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("换言之：")]),t._v(" "),a("ul",[a("li",[t._v("如果将函数传递给 "),a("code",[t._v("dispatch")]),t._v("，"),a("code",[t._v("thunk")]),t._v(" 中间件会发现它是一个函数而不是一个 "),a("code",[t._v("action")]),t._v(" 对象，拦截它，并以 "),a("code",[t._v("（dispatch，getState）")]),t._v("作为参数调用该函数")]),t._v(" "),a("li",[t._v("如果它是一个普通操作对象（或其他任何对象），它将被转发到链中的下一个中间件")])]),t._v(" "),a("p",[t._v("再次看下React中redux工作流程：")]),t._v(" "),a("div",[a("img",{attrs:{src:"https://gitee.com/sandlz/images/raw/master/uPic/react_redux.svg",alt:"react-redux"}})])])}),[],!1,null,null,null);s.default=n.exports}}]);